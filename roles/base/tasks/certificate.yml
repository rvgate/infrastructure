---
- name: create letsencrypt directory
  file:
    path: /etc/letsencrypt
    state: directory
    mode: 0700

- name: copy letsencrypt config
  template:
    src: letsencrypt.ini
    dest: /etc/letsencrypt/cli.ini

- name: run certbot
  ansible.builtin.command:
    cmd: >
      docker run --interactive=true --tty=true --rm --name certbot
        --volume "/etc/letsencrypt:/etc/letsencrypt"
        --volume "/var/lib/letsencrypt:/var/lib/letsencrypt"
        --env aws_access_key_id="{{ aws_access_key_id }}"
        --env aws_secret_access_key="{{ aws_secret_access_key }}"
        certbot/dns-route53 certonly
        --cert-name {{ item }}
        --domains {{ item }},*.{{ item }}
        --email info@{{ item }}
    creates: /etc/letsencrypt/live/{{ item }}
  with_items: "{{ domains }}"

- name: setup certbot cronjob
  cron:
    name: certbot renew
    special_time: weekly
    job: /usr/bin/docker run --interactive=true --tty=true --rm --name certbot-renew --volume "/etc/letsencrypt:/etc/letsencrypt" --volume "/var/lib/letsencrypt:/var/lib/letsencrypt" --env aws_access_key_id="{{ aws_access_key_id }}" --env aws_secret_access_key="{{ aws_secret_access_key }}" certbot/dns-route53 renew
    state: present

- name: create nginx certificates location
  file:
    path: /etc/nginx/certs
    state: directory
    mode: 0700

- name: link certificate fullchain to crt
  file:
    src: "/etc/letsencrypt/live/{{ item }}/fullchain.pem"
    dest: "/etc/nginx/certs/{{ item }}.crt"
    state: link
    force: yes
  with_items: "{{ domains }}"

- name: link certificate privkey to key
  file:
    src: "/etc/letsencrypt/live/{{ item }}/privkey.pem"
    dest: "/etc/nginx/certs/{{ item }}.key"
    state: link
    force: yes
  with_items: "{{ domains }}"
