---
- name: install certbot snap
  snap:
    classic: yes
    name:
      - certbot

- name: trust certbot plugin snap
  ansible.builtin.command:
    cmd: snap set certbot trust-plugin-with-root=ok
    creates: /snap/.snap_certbut_trusted
  register: certbot_trust

- name: write certbot trusted file
  copy:
    content: ""
    dest: /snap/.snap_certbut_trusted
  when: certbot_trust.changed

- name: install certbot-dns-route53 snap
  snap:
    classic: yes
    name:
      - certbot-dns-route53

- name: symlink certbot
  file:
    src: "/snap/bin/certbot"
    dest: "/usr/bin/certbot"
    state: link
    force: yes

- name: create letsencrypt directory
  file:
    path: /etc/letsencrypt
    state: directory
    mode: 0700

- name: create aws credentials directory
  file:
    path: /root/.aws
    state: directory
    mode: 0700

- name: copy aws credentials
  copy:
    src: aws-credentials.ini
    dest: /root/.aws/credentials

- name: create nginx certificates location
  file:
    path: /etc/letsencrypt/live/nginx
    state: directory
    mode: 0700

- name: request first wildcard certificate
  command: "/usr/bin/certbot certonly --cert-name {{ item }} --dns-route53 -d {{ item }},*.{{ item }} --preferred-challenges dns-01 --non-interactive --agree-tos -m info@{{ item }}"
  args:
    creates: "/etc/letsencrypt/live/{{ item }}/privkey.pem"
  with_items: "{{ DOMAINS }}"

- name: link certificate fullchain to crt
  file:
    src: "/etc/letsencrypt/live/{{ item }}/fullchain.pem"
    dest: "/etc/letsencrypt/live/nginx/{{ item }}.crt"
    state: link
    force: yes
  with_items: "{{ DOMAINS }}"

- name: link certificate privkey to key
  file:
    src: "/etc/letsencrypt/live/{{ item }}/privkey.pem"
    dest: "/etc/letsencrypt/live/nginx/{{ item }}.key"
    state: link
    force: yes
  with_items: "{{ DOMAINS }}"

- name: setup certbot cronjob
  cron:
    name: "certbot {{ item }}"
    special_time: weekly
    job: "/usr/bin/certbot certonly --cert-name {{ item }} --dns-route53 -d {{ item }},*.{{ item }} --preferred-challenges dns-01 --non-interactive --agree-tos -m info@{{ item }} > /dev/null"
    state: present
  with_items: "{{ DOMAINS }}"